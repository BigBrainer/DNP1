@page "/register"
@namespace AuthComponent
@using Assignment_1.Data.Impl
@using Assignment_1.Models
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized Context="Auth">
        <p>You are already registered</p>
    </Authorized>
    <NotAuthorized Context="NotAuth">
        <EditForm Model="@user" OnValidSubmit="@PerformRegister">
            <div class="container-fluid d-flex flex-column align-content-center justify-content-center" style="width:30%; height:70vh;">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label>Username</label>
                    <input class="form-control" type="text" placeholder="Username" @bind-value="user.Username" />
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <input class="form-control" type="password" placeholder="Password" @bind-value="user.Password" />
                </div>
                <div class="form-group">
                    <label>Department</label>
                    <select class="form-control custom-select" @bind="user.Department">
                        <option selected disabled>Select a department</option>
                        <option>Administrator</option>
                        <option>Clerk</option>
                    </select>
                </div>
                <div style="color:red">@errorMessage</div>
                <button class="btn-primary">Register</button>
            </div>
        </EditForm>
    </NotAuthorized>

</AuthorizeView>


@code {
    private User user = new User();
    private string errorMessage;

    public async Task PerformRegister()
    {
        try
        {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).Register(user);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

}
