@page "/auth"
@inject AuthenticationStateProvider AuthenticationStateProvider
@namespace AuthComponent
@inject NavigationManager NavigationManager
@using Assignment_1.Authorization 

<AuthorizeView>
    <NotAuthorized>
        <div class="container-fluid d-flex flex-column align-items-center justify-content-center" style="height:70vh;">
            <div class="form-group">
                <label>User name</label>
                <input class="form-control" type="text" placeholder="Username" @bind-value="username" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <input class="form-control" type="password" placeholder="Password" @bind-value="password" />
            </div>
            <div style="color:red; padding-bottom:5px;">@errorMessage</div>
            <div class="d-flex flex-column align-items-center">
                <button class="btn-primary" @onclick="PerformLoginAsync">
                    Login
                </button>
                <small class="text-muted" style="padding-top:5px;">No account yet?</small>
                <a class="form-text" href="register">Create an account</a>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLoginAsync()
    {
        errorMessage = "";
        try
        {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }
}
