@page "/Todos" 
@using Blazor_ToDo.Data
@using Blazor_ToDo.Models
@inject IToDoService ToDoService
  
<h3>To Do List</h3>

@if (todos == null)
{
	<p>
		<em>Loading...</em>
	</p>
}
else if (!todos.Any())
{
	<p>
		<em>No To Do items exist. Add some now!</em>
	</p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>User ID</th>
				<th>To Do ID</th>
				<th>Title</th>
				<th>Completed</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in todos)
			{ 
				<tr>
					<td>@item.UserId</td>
					<td>@item.TodoId</td>
					<td>@item.Title</td>
					<td>@(item.IsCompleted ? "Yes" : "No")</td>
					<td>
						<button @onclick="@(() => RemoveToDo(item.TodoId))">
							<i class="oi oi-trash" style="color:red" />
						</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
    private IList<ToDo> todos;

    protected override void OnInitialized()
    {
        todos = ToDoService.GetToDos();
    }

    private void RemoveToDo(int toDoId)
    {
        ToDo toDoToRemove = todos.First(t => t.TodoId == toDoId);
        ToDoService.RemoveToDo(toDoId);
		todos.Remove(toDoToRemove);
    }

}
